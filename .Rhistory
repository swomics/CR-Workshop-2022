levels(df$val)
unique(df$val)
df <- read.csv("SraRunInfo.csv",header=T)
df$val <- as.integer(str_split(df$LoadDate, "-")[[1]][1])
unique(df$val)
as.numeric(str_split(df$ReleaseDate, "-")[[1]])
as.numeric(str_split(df$ReleaseDate, "-")[])
as.numeric(str_split(df$ReleaseDate, "-")[1])
as.numeric(str_split(df$ReleaseDate, "-")[[1]])
as.numeric(str_split_fixed(df$ReleaseDate, "-",1))
as.numeric(str_split_fixed(df$ReleaseDate, "-",1)[1])
as.numeric(str_split_fixed(df$ReleaseDate, "-"))
as.numeric(str_split_fixed(df$ReleaseDate, "-",2))
length(df$Run)
length(df$val)
head(df$val)
unique(df$val)
df$val <- as.numeric(str_split_fixed(df$ReleaseDate, "-",2))
unique(df$val)
length(as.numeric(str_split_fixed(df$ReleaseDate, "-",2)))
length(as.numeric(str_split_fixed(df$ReleaseDate, "-",2))[1])
length(as.numeric(str_split_fixed(df$ReleaseDate, "-",2)))
df <- read.csv("SraRunInfo.csv",header=T)
df$val <- as.numeric(str_split_fixed(df$ReleaseDate, "-",2))
lrngth(row.names(df))
length(row.names(df))
length(gsub("-.*", "", df$ReleaseDate) )
df$val <- gsub("-.*", "", df$ReleaseDate)
df <- read.csv("SraRunInfo.csv",header=T)
length(gsub("-.*", "", df$ReleaseDate) )
library(adegenet)
library(bioanalyzeR)
path <- "~/Downloads/Dog_FS_Test2_High Sensitivity DNA Assay_DE72905138_2022-06-22_12-45-44_Sample11/"
all_data <- tibble()
library(tidyr)
all_data <- tibble()
path <- "~/Downloads/Dog_FS_Test2_High Sensitivity DNA Assay_DE72905138_2022-06-22_12-45-44_Sample11/"
for(i in samples){
# Import one by one
data <- read_csv(paste0(path, i),
skip = 17,
n_max = 1060)
# Add the well number information
data <- mutate(data, sample_nr = str_extract(i, pattern = "Sample\\d+"))
# Store in the big table
all_data <- rbind(all_data, data)
}
samples <- list.files(path = "./20210106data", pattern = "*Sample\\d+.csv$")
for(i in samples){
# Import one by one
data <- read_csv(paste0(path, i),
skip = 17,
n_max = 1060)
# Add the well number information
data <- mutate(data, sample_nr = str_extract(i, pattern = "Sample\\d+"))
# Store in the big table
all_data <- rbind(all_data, data)
}
all_data <- all_data %>%
mutate(sample_nr = as.numeric(str_extract(sample_nr, pattern = "\\d+$")))
library(dplyr)
all_data <- all_data %>%
mutate(sample_nr = as.numeric(str_extract(sample_nr, pattern = "\\d+$")))
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
all_data <- all_data %>%
mutate(sample_nr = as.numeric(str_extract(sample_nr, pattern = "\\d+$")))
head(all_data)
samples <- list.files(path = "~/Downloads/Dog_FS_Test2_High Sensitivity DNA Assay_DE72905138_2022-06-22_12-45-44_Sample11/", pattern = "*Sample\\d+.csv$")
samples
for(i in samples){
# Import one by one
data <- read_csv(paste0(path, i),
skip = 17,
n_max = 1060)
# Add the well number information
data <- mutate(data, sample_nr = str_extract(i, pattern = "Sample\\d+"))
# Store in the big table
all_data <- rbind(all_data, data)
}
all_data <- all_data %>%
mutate(sample_nr = as.numeric(str_extract(sample_nr, pattern = "\\d+$")))
head(all_data)
ggplot(aes(x = Time, y = Value, color = as.factor(replicate)))+
geom_line()+
facet_grid(cols = vars(treatment))+
scale_x_continuous(breaks = c(20, 40, 60))+
scale_color_jco(name = "Replicate")+
theme_pubr()+
labs(x = "Time in seconds",
y = "Fluorescence (a.u.)")
ggplot(data=all_data,aes(x = Time, y = Value, color = as.factor(replicate)))+
geom_line()+
facet_grid(cols = vars(treatment))+
scale_x_continuous(breaks = c(20, 40, 60))+
scale_color_jco(name = "Replicate")+
theme_pubr()+
labs(x = "Time in seconds",
y = "Fluorescence (a.u.)")
library(ggpubr)
install.packages(ggpubr)
install.packages("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
ggplot(data=all_data,aes(x = Time, y = Value, color = as.factor(replicate)))+
geom_line()+
facet_grid(cols = vars(treatment))+
scale_x_continuous(breaks = c(20, 40, 60)) +
labs(x = "Time in seconds",
y = "Fluorescence (a.u.)")
library(ggplot2)
ggplot(data=all_data,aes(x = Time, y = Value, color = as.factor(replicate)))+
geom_line()+
facet_grid(cols = vars(treatment))+
scale_x_continuous(breaks = c(20, 40, 60)) +
labs(x = "Time in seconds",
y = "Fluorescence (a.u.)")
head(all_data)
rlang::last_error()
ggplot(aes(x = Time, y = Value, color = as.factor(replicate)))+
geom_line()+
scale_x_continuous(breaks = c(20, 40, 60))+
scale_color_jco(name = "Replicate")+
theme_pubr()+
labs(x = "Time in seconds",
y = "Fluorescence (a.u.)")
ggplot(data=all_data,aes(x = Time, y = Value, color = as.factor(replicate)))+
geom_line()+
scale_x_continuous(breaks = c(20, 40, 60))+
scale_color_jco(name = "Replicate")+
theme_pubr()+
labs(x = "Time in seconds",
y = "Fluorescence (a.u.)")
ggplot(data=all_data,aes(x = Time, y = Value, color = as.factor(replicate)))+
geom_line()+
scale_x_continuous(breaks = c(20, 40, 60))+
scale_color_jco(name = "Replicate")+
theme_pubr()+
labs(x = "Time in seconds",
y = "Fluorescence (a.u.)")
ggplot(data=all_data,aes(x = Time, y = Value, color = as.factor(replicate)))+
geom_line()+
scale_x_continuous(breaks = c(20, 40, 60))+
theme_pubr()+
labs(x = "Time in seconds",
y = "Fluorescence (a.u.)")
ggplot(data=all_data,aes(x = Time, y = Value, color = as.factor(replicate)))+
geom_line()+
scale_x_continuous(breaks = c(20, 40, 60))+
labs(x = "Time in seconds",
y = "Fluorescence (a.u.)")
head(all_data)
all_data %>% ggplot(aes(x = Time, y = Value, color = as.factor(replicate)))+
geom_line()+
scale_x_continuous(breaks = c(20, 40, 60))+
labs(x = "Time in seconds",
y = "Fluorescence (a.u.)")
library(tidyverse)
all_data %>% ggplot(aes(x = Time, y = Value, color = as.factor(replicate)))+
geom_line()+
scale_x_continuous(breaks = c(20, 40, 60))+
labs(x = "Time in seconds",
y = "Fluorescence (a.u.)")
all_data
ggplot(data=all_data,aes(x = Time, y = Value, color = as.factor(sample_nr)))+
geom_line()+
scale_x_continuous(breaks = c(20, 40, 60))+
labs(x = "Time in seconds",
y = "Fluorescence (a.u.)")
ggplot(data=all_data,aes(x = Time, y = Value))+
geom_line()+ facet_wrap(~sample_nr)
scale_x_continuous(breaks = c(20, 40, 60))+
labs(x = "Time in seconds",
y = "Fluorescence (a.u.)")
ggplot(data=all_data,aes(x = Time, y = Value, color = as.factor(sample_nr)))+
geom_line()+
scale_x_continuous(breaks = c(20, 40, 60))+
labs(x = "Time in seconds",
y = "Fluorescence (a.u.)")
ggplot(data=all_data,aes(x = Time, y = Value))+
geom_line()+ facet_wrap(~sample_nr)
scale_x_continuous(breaks = c(20, 40, 60))+
labs(x = "Time in seconds",
y = "Fluorescence (a.u.)")
ggplot(data=all_data,aes(x = Time, y = Value))+
geom_line()+ facet_wrap(~sample_nr)
scale_x_continuous(breaks = c(20, 40, 60,80,100))+
labs(x = "Time in seconds",
y = "Fluorescence (a.u.)")
ggplot(data=all_data,aes(x = Time, y = Value))+
geom_line()+ facet_wrap(~sample_nr)
scale_x_continuous(breaks = c(20, 40, 60,80,100,120,140,160))+
labs(x = "Time in seconds",
y = "Fluorescence (a.u.)")
for(i in samples){
# Import one by one
data <- read_csv(paste0(path, i),
skip = 17)
# Add the well number information
data <- mutate(data, sample_nr = str_extract(i, pattern = "Sample\\d+"))
# Store in the big table
all_data <- rbind(all_data, data)
}
all_data <- all_data %>%
mutate(sample_nr = as.numeric(str_extract(sample_nr, pattern = "\\d+$")))
library(ggpubr)
all_data %>% ggplot(aes(x = Time, y = Value, color = as.factor(replicate)))+
geom_line()+
scale_x_continuous(breaks = c(20, 40, 60))+
labs(x = "Time in seconds",
y = "Fluorescence (a.u.)")
all_data %>% ggplot(aes(x = Time, y = Value, color = as.factor(sample_nr)))+
geom_line()+
scale_x_continuous(breaks = c(20, 40, 60))+
labs(x = "Time in seconds",
y = "Fluorescence (a.u.)")
head(all_data)
all_data
tail(all_data)
library(tidyverse)
all_data <- tibble()
path <- "~/Downloads/Dog_FS_Test2_High Sensitivity DNA Assay_DE72905138_2022-06-22_12-45-44_Sample11/"
samples <- list.files(path = "~/Downloads/Dog_FS_Test2_High Sensitivity DNA Assay_DE72905138_2022-06-22_12-45-44_Sample11/", pattern = "*Sample\\d+.csv$")
for(i in samples){
# Import one by one
data <- read_csv(paste0(path, i), skip = 17)
data2 <- head(data2, -2)
# Add the well number information
data <- mutate(data2, sample_nr = str_extract(i, pattern = "Sample\\d+"))
# Store in the big table
all_data <- rbind(all_data, data)
}
library(tidyverse)
all_data <- tibble()
path <- "~/Downloads/Dog_FS_Test2_High Sensitivity DNA Assay_DE72905138_2022-06-22_12-45-44_Sample11/"
samples <- list.files(path = "~/Downloads/Dog_FS_Test2_High Sensitivity DNA Assay_DE72905138_2022-06-22_12-45-44_Sample11/", pattern = "*Sample\\d+.csv$")
for(i in samples){
# Import one by one
data <- read_csv(paste0(path, i), skip = 17)
data2 <- head(data, -2)
# Add the well number information
data <- mutate(data2, sample_nr = str_extract(i, pattern = "Sample\\d+"))
# Store in the big table
all_data <- rbind(all_data, data)
}
all_data <- all_data %>%
mutate(sample_nr = as.numeric(str_extract(sample_nr, pattern = "\\d+$")))
#library(ggpubr)
#library(ggsci)
all_data %>% ggplot(aes(x = Time, y = Value, color = as.factor(sample_nr)))+
geom_line()+
scale_x_continuous(breaks = c(20, 40, 60))+
labs(x = "Time in seconds",
y = "Fluorescence (a.u.)")
tail(all_data)
hist(all_data$Time)
data2
tail(data)
tail(data2)
library(tidyverse)
all_data <- tibble()
path <- "~/Downloads/Dog_FS_Test2_High Sensitivity DNA Assay_DE72905138_2022-06-22_12-45-44_Sample11/"
samples <- list.files(path = "~/Downloads/Dog_FS_Test2_High Sensitivity DNA Assay_DE72905138_2022-06-22_12-45-44_Sample11/", pattern = "*Sample\\d+.csv$")
for(i in samples){
# Import one by one
data <- read_csv(paste0(path, i), skip = 17)
data2 <- head(data, -2)
# Add the well number information
data <- mutate(data2, sample_nr = str_extract(i, pattern = "Sample\\d+"))
# Store in the big table
all_data <- rbind(all_data, data)
}
all_data <- all_data %>%
mutate(sample_nr = as.numeric(str_extract(sample_nr, pattern = "\\d+$")))
#library(ggpubr)
#library(ggsci)
all_data %>% ggplot(aes(x = Time, y = Value, color = as.factor(sample_nr)))+
geom_line()+
scale_x_continuous(breaks = c(20, 40, 60))+
labs(x = "Time in seconds",
y = "Fluorescence (a.u.)")
head(data2)
library(tidyverse)
all_data <- tibble()
path <- "~/Downloads/Dog_FS_Test2_High Sensitivity DNA Assay_DE72905138_2022-06-22_12-45-44_Sample11/"
samples <- list.files(path = "~/Downloads/Dog_FS_Test2_High Sensitivity DNA Assay_DE72905138_2022-06-22_12-45-44_Sample11/", pattern = "*Sample\\d+.csv$")
for(i in samples){
# Import one by one
data <- read_csv(paste0(path, i), skip = 17)
data2 <- head(data, -2)
# Add the well number information
data <- mutate(data2, sample_nr = str_extract(i, pattern = "Sample\\d+"))
# Store in the big table
all_data <- rbind(all_data, data)
}
all_data <- all_data %>%
mutate(sample_nr = as.numeric(str_extract(sample_nr, pattern = "\\d+$")))
#library(ggpubr)
#library(ggsci)
all_data %>% ggplot(aes(x = as.numeric(Time), y = Value, color = as.factor(sample_nr)))+
geom_line()+
scale_x_continuous(breaks = c(20, 40, 60))+
labs(x = "Time in seconds",
y = "Fluorescence (a.u.)")
all_data %>% ggplot(aes(x = as.numeric(Time), y = Value, color = as.factor(sample_nr)))+
geom_line()+
scale_x_continuous(breaks = c(20, 40, 60))+
labs(x = "Time in seconds",
y = "Fluorescence (a.u.)")
all_data <- tibble()
path <- "~/Downloads/Dog_FS_Test2_High Sensitivity DNA Assay_DE72905138_2022-06-22_12-45-44_Sample11/"
samples <- list.files(path = "~/Downloads/Dog_FS_Test2_High Sensitivity DNA Assay_DE72905138_2022-06-22_12-45-44_Sample11/", pattern = "*Sample\\d+.csv$")
for(i in samples){
# Import one by one
data <- read_csv(paste0(path, i),
skip = 17,
n_max = 2060)
# Add the well number information
data <- mutate(data, sample_nr = str_extract(i, pattern = "Sample\\d+"))
# Store in the big table
all_data <- rbind(all_data, data)
}
all_data <- all_data %>%
mutate(sample_nr = as.numeric(str_extract(sample_nr, pattern = "\\d+$")))
#library(ggpubr)
#library(ggsci)
all_data %>% ggplot(aes(x = Time, y = Value, color = as.factor(sample_nr)))+
geom_line()+
scale_x_continuous(breaks = c(20, 40, 60))+
labs(x = "Time in seconds",
y = "Fluorescence (a.u.)")
all_data %>% ggplot(aes(x = Time, y = Value, color = as.factor(sample_nr)))+
geom_line()+
scale_x_continuous(breaks = c(20, 40, 60, 80 ,100, 120, 140,160,180,200
))+
labs(x = "Time in seconds",
y = "Fluorescence (a.u.)")
all_data %>% ggplot(aes(x = Time, y = Value, color = as.factor(sample_nr)))+
geom_line()+
scale_x_continuous(breaks = c(20, 40, 60, 80 ,100, 120, 140,160,180,200
))+
labs(x = "Time in seconds",
y = "Fluorescence (a.u.)") + theme_dark()
all_data %>% ggplot(aes(x = Time, y = Value, color = as.factor(sample_nr)))+
geom_line()+
scale_x_continuous(breaks = c(20, 40, 60, 80 ,100, 120, 140,160,180,200
))+
labs(x = "Time in seconds",
y = "Fluorescence (a.u.)") + theme_minimal()
library(plotly)
library(stringr)
df <- read.csv("./Resources/SraRunInfo.csv",header=T)
df$year <- gsub("-.*", "", df$ReleaseDate)
fig <- df %>%
plot_ly(
x = ~bases,
y = ~avgLength,
color = ~Platform,
text = ~paste0(ScientificName,"-",Model,"-",Run),
hoverinfo = "text",
type = 'scatter',
mode = 'markers'
)
fig <- fig %>% layout(
yaxis = list(
type = "log",
autorange="off"),
xaxis = list(
type = "log",
autorange="off"
)
)
fig
question("What number is the letter A in the English alphabet?",
answer("8"),
answer("14"),
answer("1", correct = TRUE),
answer("23")
)
library(utils)
question("What number is the letter A in the English alphabet?",
answer("8"),
answer("14"),
answer("1", correct = TRUE),
answer("23")
)
#library(utils)
question("What number is the letter A in the English alphabet?",
answer("8"),
answer("14"),
answer("1", correct = TRUE),
answer("23")
)
#library(utils)
utils::question("What number is the letter A in the English alphabet?",
answer("8"),
answer("14"),
answer("1", correct = TRUE),
answer("23")
)
library(utils)
question("What number is the letter A in the English alphabet?",
answer("8"),
answer("14"),
answer("1", correct = TRUE),
answer("23")
)
install.packages("learnr")
library(learnr)
question("What number is the letter A in the English alphabet?",
answer("8"),
answer("14"),
answer("1", correct = TRUE),
answer("23")
)
library(learnr)
question("Based on X total sequencing data and an E.coli genome size estimate of 4.5Mbp, what coverage would we expect the Illumina data to have?",
answer("8"),
answer("14"),
answer("1", correct = TRUE),
answer("23")
)
question("Based on X total sequencing data and an E.coli genome size estimate of 4.5Mbp, what coverage would we expect the PacBio Hifi data to have?",
answer("8"),
answer("14"),
answer("1", correct = TRUE),
answer("23")
)
question("Based on X total sequencing data and an E.coli genome size estimate of 4.5Mbp, what coverage would we expect the Nanopore data to have?",
answer("8"),
answer("14"),
answer("1", correct = TRUE),
answer("23")
)
library(plotly)
library(stringr)
df <- read.csv("./Resources/SraRunInfo.csv",header=T)
df$year <- gsub("-.*", "", df$ReleaseDate)
fig <- df %>%
plot_ly(
x = ~bases,
y = ~avgLength,
color = ~Platform,
text = ~paste0(ScientificName,"-",Model,"-",Run),
hoverinfo = "text",
type = 'scatter',
mode = 'markers'
)
fig <- fig %>% layout(
yaxis = list(
type = "log",
autorange="off"),
xaxis = list(
type = "log",
autorange="off"
)
)
fig
library(shiny)
radioButtons(
inputId = "radio_input",
label = "Are you a cat person or a dog person?",
choices = c(
"Cat person",
"Dog person",
"Don't make me choose!",
"Neither :("
),
selected = "Don't make me choose!"
)
install.packages("leaflet")
library(learnr)
library(plotly)
library(stringr)
df <- read.csv("./Resources/SraRunInfo.csv",header=T)
df$year <- gsub("-.*", "", df$ReleaseDate)
fig <- df %>%
plot_ly(
x = ~bases,
y = ~avgLength,
color = ~Platform,
text = ~paste0(ScientificName,"-",Model,"-",Run),
hoverinfo = "text",
type = 'scatter',
mode = 'markers'
)
fig <- fig %>% layout(
yaxis = list(
type = "log",
autorange="off"),
xaxis = list(
type = "log",
autorange="off"
)
)
fig
library(learnr)
question("What number is the letter A in the English alphabet?",
answer("8"),
answer("14"),
answer("1", correct = TRUE),
answer("23")
)
?geom_histogram
reticulate::repl_python()
reticulate::repl_python()
import dash
n
install.packages("reticulate")
install.packages("reticulate")
reticulate::repl_python()
